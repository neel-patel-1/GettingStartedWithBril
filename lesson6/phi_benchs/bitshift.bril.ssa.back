@pow(x: int, n: int): int {
  v23: int = id n;
  v24: int = const 1;
  v25: bool = eq v23 v24;
  br v25 .then.0 .else.0;
.then.0:
  v26: int = id x;
  ret v26;
.else.0:
  v27: int = id x;
  v28: int = id n;
  v29: int = const 2;
  v30: int = div v28 v29;
  v31: int = call @pow v27 v30;
  v32: int = id v31;
  v33: int = id v32;
  v34: int = id v32;
  v35: int = mul v33 v34;
  v36: int = id v35;
  v37: int = id n;
  v38: int = const 2;
  v39: int = call @mod v37 v38;
  v40: int = const 1;
  v41: bool = eq v39 v40;
  br v41 .then.12 .else.12;
.then.12:
  v42: int = id v36;
  v43: int = id x;
  v44: int = mul v42 v43;
  v45: int = id v44;
  v51 = id v45;
  v50 = id v44;
  v49 = id v43;
  v48 = id v42;
  jmp .endif.12;
.else.12:
  v46: int = id v36;
  v47: int = id v46;
  v52 = id v46;
  v51 = id v47;
  v50 = id v44;
  v49 = id v43;
  v48 = id v42;
.endif.12:
  v53: int = id v51;
  ret v53;
}
@mod(a: int, b: int): int {
  v7: int = id a;
  v8: int = id a;
  v9: int = id b;
  v10: int = div v8 v9;
  v11: int = id b;
  v12: int = mul v10 v11;
  v13: int = sub v7 v12;
  ret v13;
}
@LEFTSHIFT(x: int, step: int): int {
  v5: int = const 2;
  v6: int = id step;
  v7: int = call @pow v5 v6;
  v8: int = id v7;
  v9: int = id x;
  v10: int = id v8;
  v11: int = mul v9 v10;
  ret v11;
}
@RIGHTSHIFT(x: int, step: int): int {
  v5: int = const 2;
  v6: int = id step;
  v7: int = call @pow v5 v6;
  v8: int = id v7;
  v9: int = id x;
  v10: int = id v8;
  v11: int = div v9 v10;
  ret v11;
}
@main(a: int, b: int, c: int, d: int) {
  v6: int = id a;
  v7: int = id b;
  v8: int = call @LEFTSHIFT v6 v7;
  print v8;
  v9: int = id c;
  v10: int = id d;
  v11: int = call @RIGHTSHIFT v9 v10;
  print v11;
}
