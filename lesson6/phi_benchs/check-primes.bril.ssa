@main(n: int) {
  v16: int = const 1;
  v17: int = id v16;
.for.cond.1:
  v51 = phi v39 .endif.7;
  v50 = phi v38 .endif.7;
  v49 = phi v37 .endif.7;
  v48 = phi v36 .endif.7;
  v47 = phi v35 .endif.7;
  v46 = phi v34 .endif.7;
  v45 = phi v33 .endif.7;
  v44 = phi v26 .endif.7;
  v43 = phi v25 .endif.7;
  v42 = phi v23 .endif.7;
  v18 = phi v17 v40 .Entry .endif.7;
  v19: int = id v18;
  v20: int = id n;
  v21: bool = lt v19 v20;
  br v5 .for.body.1 .for.end.1;
.for.body.1:
  v22 = phi v18 .for.cond.1;
  v23: int = id v22;
  v24: bool = call @checkPrime v23;
  v25: bool = id v24;
  v26: bool = id v25;
  br v8 .then.7 .else.7;
.then.7:
  v27 = phi v22 .for.body.1;
  v28: int = const 1;
  print v9;
  v29: int = const 0;
  jmp .endif.7;
.else.7:
  v30 = phi v22 .for.body.1;
  v31: int = const 0;
  print v11;
  v32: int = const 0;
.endif.7:
  v36 = phi v32 .else.7;
  v35 = phi v31 .else.7;
  v34 = phi v29 v29 .then.7 .else.7;
  v33 = phi v28 v28 .then.7 .else.7;
  v37: int = id v30;
  v38: int = const 1;
  v39: int = add v37 v38;
  v40: int = id v39;
  jmp .for.cond.1;
.for.end.1:
  v41 = phi v18 .for.cond.1;
}
@checkPrime(x: int): bool {
  v25: int = id x;
  v26: int = const 1;
  v27: bool = le v25 v26;
  br v3 .then.0 .else.0;
.then.0:
  v28: bool = const false;
  ret v4;
.else.0:
.endif.0:
  v29: int = const 2;
  v30: int = id v29;
.for.cond.5:
  v69 = phi v52 .endif.18;
  v68 = phi v51 .endif.18;
  v67 = phi v50 .endif.18;
  v66 = phi v46 .endif.18;
  v65 = phi v45 .endif.18;
  v64 = phi v44 .endif.18;
  v63 = phi v43 .endif.18;
  v62 = phi v39 .endif.18;
  v61 = phi v42 .endif.18;
  v60 = phi v41 .endif.18;
  v59 = phi v40 .endif.18;
  v58 = phi v38 .endif.18;
  v57 = phi v37 .endif.18;
  v56 = phi v36 .endif.18;
  v31 = phi v30 v53 .endif.0 .endif.18;
  v32: int = id v31;
  v33: int = id x;
  v34: bool = lt v32 v33;
  br v9 .for.body.5 .for.end.5;
.for.body.5:
  v35 = phi v31 .for.cond.5;
  v36: int = id x;
  v37: int = id v35;
  v38: int = div v36 v37;
  v39: int = id v38;
  v40: int = id v39;
  v41: int = id v35;
  v42: int = mul v40 v41;
  v43: int = id x;
  v44: bool = eq v42 v43;
  v45: bool = id v44;
  v46: bool = id v45;
  br v19 .then.18 .else.18;
.then.18:
  v47 = phi v35 .for.body.5;
  v48: bool = const false;
  ret v20;
.else.18:
  v49 = phi v35 .for.body.5;
.endif.18:
  v50: int = id v49;
  v51: int = const 1;
  v52: int = add v50 v51;
  v53: int = id v52;
  jmp .for.cond.5;
.for.end.5:
  v54 = phi v31 .for.cond.5;
  v55: bool = const true;
  ret v24;
}
